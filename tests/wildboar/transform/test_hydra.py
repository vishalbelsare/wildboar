import numpy as np
from wildboar.datasets import load_gun_point
from wildboar.transform import HydraTransform


def test_hydra_fit_transform():
    X, y = load_gun_point()
    f = HydraTransform(random_state=1)
    np.testing.assert_equal(f.fit_transform(X), f.fit(X).transform(X))


def test_hydra_transform():
    X, y = load_gun_point()
    f = HydraTransform(random_state=1, n_groups=2)
    f.fit(X)

    # fmt: off
    expected = np.array([[1.70000000e+01, 3.07058073e-01, 7.00000000e+00, 1.84623439e-01,
                          1.10000000e+01, 4.00124133e-01, 1.00000000e+00, 0.00000000e+00,
                          1.00000000e+00, 9.20729769e-04, 5.20000000e+01, 6.41955542e+00,
                          5.40000000e+01, 4.86439337e+00, 7.00000000e+00, 2.61073960e-02,
                          2.10000000e+01, 1.66887297e+00, 7.00000000e+00, 4.21539648e-01,
                          1.80000000e+01, 1.46014932e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 4.20000000e+01, 1.20030495e+01,
                          5.20000000e+01, 8.65208766e+00, 1.00000000e+01, 2.29777820e-03,
                          2.50000000e+01, 4.73991049e+00, 6.00000000e+00, 1.10248445e+00,
                          2.50000000e+01, 4.51909488e+00, 0.00000000e+00, 3.68417783e-02,
                          0.00000000e+00, 0.00000000e+00, 3.90000000e+01, 2.19149915e+01,
                          4.90000000e+01, 1.55946597e+01, 6.00000000e+00, 1.30263955e-02,
                          7.00000000e+00, 9.92029880e+00, 1.00000000e+01, 5.15685473e+00,
                          3.00000000e+01, 1.22047073e+01, 0.00000000e+00, 0.00000000e+00,
                          2.00000000e+00, 0.00000000e+00, 4.10000000e+01, 3.04807805e+01,
                          4.40000000e+01, 2.14913266e+01, 1.60000000e+01, 0.00000000e+00,
                          3.70000000e+01, 1.80780956e+01, 0.00000000e+00, 3.91511772e+00,
                          1.70000000e+01, 2.13106691e+01, 7.00000000e+00, 0.00000000e+00,
                          1.00000000e+01, 1.10108932e-01, 2.20000000e+01, 1.12872441e+01,
                          1.70000000e+01, 8.12441650e+00, 4.00000000e+01, 2.05322347e+01,
                          3.50000000e+01, 5.54418095e-01, 5.00000000e+00, 4.80083075e-02,
                          2.80000000e+01, 4.81723078e-01, 5.00000000e+00, 1.22319059e-06,
                          5.00000000e+00, 1.27749722e-01, 6.20000000e+01, 5.59591295e+00,
                          4.00000000e+00, 1.44862231e-01, 6.00000000e+00, 2.65718362e-02,
                          3.60000000e+01, 1.33526707e+00, 4.00000000e+00, 0.00000000e+00,
                          2.10000000e+01, 1.27300818e+00, 4.00000000e+00, 0.00000000e+00,
                          7.00000000e+00, 2.73945337e-01, 6.60000000e+01, 1.08949068e+01,
                          6.00000000e+00, 5.39482908e-01, 6.00000000e+00, 1.68460765e-01,
                          3.70000000e+01, 3.82838025e+00, 5.00000000e+00, 8.23713220e-03,
                          1.60000000e+01, 3.60532418e+00, 7.00000000e+00, 0.00000000e+00,
                          7.00000000e+00, 7.38879618e-01, 6.60000000e+01, 2.06259777e+01,
                          8.00000000e+00, 1.75654885e+00, 4.00000000e+00, 7.51711889e-01,
                          5.30000000e+01, 1.14171536e+01, 6.00000000e+00, 0.00000000e+00,
                          7.00000000e+00, 7.20510798e+00, 5.00000000e+00, 0.00000000e+00,
                          8.00000000e+00, 1.11603440e+00, 6.00000000e+01, 3.50637382e+01,
                          0.00000000e+00, 4.44404033e+00, 1.10000000e+01, 2.03633796e+00,
                          4.70000000e+01, 2.15649391e+01, 2.30000000e+01, 0.00000000e+00,
                          2.30000000e+01, 1.38364544e+01, 1.20000000e+01, 3.91607203e+00,
                          3.00000000e+00, 0.00000000e+00, 3.10000000e+01, 3.02696535e+01,
                          3.00000000e+00, 5.72126175e+00, 8.00000000e+00, 3.96946646e+00]])
    # fmt: on

    np.testing.assert_almost_equal(f.transform(X)[:1], expected)
